package handler

import (
	"context"
	"tgreminder/internal/parser"
	"tgreminder/internal/service"
	"tgreminder/internal/utils"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

type Handler struct {
	svc *service.ReminderService
}

func NewHandler(svc *service.ReminderService) *Handler {
	return &Handler{svc: svc}
}

func (h *Handler) HandleUpdate(update tgbotapi.Update) {
	// log.Printf("Received update: %+v", update)

	err := utils.CheckMessage(update)
	if err != nil {
		return
	}

	text := update.Message.Text
	// log.Printf("Processing text: %s", text)

	switch text {
	case "/start":
		// log.Println("Handling /start command")
		h.svc.SendMessage(update.Message.Chat.ID, "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-–Ω–∞–ø–æ–º–∏–Ω–∞–ª–∫–∞.\n\n"+
			"–ß—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ, –æ—Ç–ø—Ä–∞–≤—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n"+
			"–ù–∞–∑–≤–∞–Ω–∏–µ: –°–¥–µ–ª–∞—Ç—å —Ä–∞–∑–º–∏–Ω–∫—É\n"+
			"–î–∞—Ç–∞ —Å—Ç–∞—Ä—Ç–∞: 2025-09-17 08:00\n"+
			"–î–∞—Ç–∞ –∫–æ–Ω—Ü–∞: 2025-09-20 20:00\n"+
			"–ß–∞—Å—Ç–æ—Ç–∞: –∫–∞–∂–¥—ã–µ 3 —á–∞—Å–∞\n")
		return
	}

	// log.Println("Attempting to parse reminder")
	reminder, err := parser.ParseReminder(text, update.Message.Chat.ID)
	if err != nil {
		// log.Printf("Parse error: %v", err)
		h.svc.SendMessage(update.Message.Chat.ID, "‚ùå –û—à–∏–±–∫–∞: "+err.Error())
		return
	}

	// log.Printf("Parsed reminder: %+v", reminder)

	if err := h.svc.AddReminder(context.Background(), reminder); err != nil {
		// log.Printf("Add reminder error: %v", err)
		h.svc.SendMessage(update.Message.Chat.ID, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: "+err.Error())
		return
	}

	// log.Println("Reminder added successfully")
	h.svc.SendMessage(update.Message.Chat.ID, "‚úÖ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ: "+reminder.Title)
}
